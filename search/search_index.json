{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to 2025 IEEE Workshop","text":""},{"location":"#photonics-automation-with-python","title":"Photonics Automation with Python","text":"<p>Overview: This four\u2011day workshop is designed for students and early\u2011career researchers who want to automate photonics experiments with Python. Participants will learn to control optical components, design end\u2011to\u2011end measurement architectures, and convert raw data into clear visualisations. The programm follows the entire automation pipeline\u2014from hardware drivers to data analysis\u2014combining theory with hands\u2011on implementation.</p> <p>Beyond skills training, the school functions as an interactive forum where students and researchers can present emerging results, debate new methods, and exchange pre\u2011publication ideas. Keynote talks, industry showcases, live lab demonstrations, and structured coding sessions round out an intensive, collaborative learning experience.</p>"},{"location":"#program-structure","title":"Program structure:","text":"<p>Day\u202f1 \u2192 Workshop symposium (peer\u2011reviewed talks and poster session)</p> <p>Days\u202f2\u20134 \u2192 Guided hands-on sessions</p>"},{"location":"#why-enroll","title":"Why Enroll?","text":"<p>Python is rapidly becoming the control language of modern optics labs. In this four\u2011day intensive workshop you will learn to:</p> <ul> <li> <p>Drive photonic hardware \u2013 integrate lasers, shutters, motorized stages, spectrometers, and cameras through easy\u2011to\u2011read Python scripts.</p> </li> <li> <p>Automate measurements \u2013 create end\u2011to\u2011end workflows that align optics, trigger acquisitions, capture metadata, and stream results in real time.</p> </li> <li> <p>Process &amp; visualize data \u2013 turn raw traces and images into publication\u2011ready insights using NumPy, Pandas, and Matplotlib.</p> </li> <li> <p>Adopt best practices \u2013 version\u2011control experiments, document procedures, and build reusable code modules that scale with your research.   </p> </li> </ul> <p>Target Participants for the symposium: The symposium welcomes students, early-career researchers, and established scientists, as well as others with a professional interest in experiment automation. Attendees may choose to participate as observers, contribute an oral presentation or poster, or engage in both activities.</p> <p>Target Participants for the hands-on sessions: This program is tailored for undergraduate and graduate students, as well as early-career researchers with a basic knowledge of Python who are looking to apply programming skills to photonics research and experiment automation.</p>"},{"location":"contact/","title":"Contact","text":"<p>If you have any question or suggestions feel free to contact any organizers below.</p> <p>Organizing Committee</p> <p>Dr. Viktoriia\u202fRutckaia \u2013\u202fGeneral Chair - viktoriia.rutckaia47@gc.cuny.edu</p> <p>Dr. Diana\u202fStrickland \u2013\u202fProgram Chair - dstrickland@gc.cuny.edu</p> <p>Dr. Prachi Thureja \u2013\u202fOperations Chair - pthureja@gc.cuny.edu</p>"},{"location":"flyer/","title":"Flyer","text":""},{"location":"instructors/","title":"Workshop Instructors","text":""},{"location":"instructors/#dr-mario-marques","title":"Dr. Mario\u202fMarques","text":""},{"location":"instructors/#ayisha-yankey","title":"Ayisha Yankey","text":"<p> Hi, my name is Ayisha Yankey. I am currently a high school senior and an incoming Electrical and Computer Engineering major at Carnegie Mellon University. Since last summer, I\u2019ve been working at the ASRC in the photonics lab, where I focus on automating experimental setups. I\u2019m excited to contribute to this workshop and happy to assist in any way I can.</p>"},{"location":"instructors/#dr-romain-tirole","title":"Dr. Romain\u202fTirole","text":"<p>Romain Tirole\u2019s research focuses on the investigation of various materials and nanostructures as platforms for nonlinear optical time-varying media. Time-varying photonics recently surged as a steaming field of research thanks to its promises for control of waves, yet their implementation in optics remains challenging. Using nonlinear optical techniques such as pump-probe spectroscopy, harmonic generation microscopy or Z-scan, Romain explores how the dynamics of charges carriers can help create such devices. With years of hands-on experience synchronizing instruments in tedious measurements, he\u2019s looking forward to sharing his struggles and learned lessons with you! Romain Tirole joined the ASRC and Prof. Andrea Al\u00f9\u2019s team as a Research Fellow in 2023 after receiving his PhD in Physics from Imperial College London working in Prof. Riccardo Sapienza\u2019s group. Previously, Romain completed his undergraduate degrees studying at the University of Cambridge, Imperial College London and the Classe Pr\u00e9paratoire aux Grandes \u00c9coles Pierre de Fermat in Toulouse.</p>"},{"location":"instructors/#dr-evripidis-michail","title":"Dr. Evripidis Michail","text":"<p> Evripidis Michail\u2019s research focuses on light\u2013matter interactions, with the goal of investigating functional optical and electronic properties of materials and nanodevices to enable their integration into advanced technological applications.  His work primarily centers on the design and development of high-throughput, ultrafast optical and optoelectronic probes. These tools enable sensitive spectroscopic characterization of materials and photonic devices under conditions of strong light\u2013matter coupling or intense electromagnetic fields. Through these techniques, he explores distinctive materials' properties, thereby proposing the design of nanodevices or molecular architectures with tailored functionalities, contributing to a robust scientific foundation with relevance to emerging technologies. Evripidis joined the Advanced Science Research Center in 2021 as a Research Associate in Professor Matthew Sfeir\u2019s research group within the Photonics Initiative. He earned his Ph.D. in Applied and Chemical Physics from Julius Maximilians University of W\u00fcrzburg in Germany and received his master\u2019s and bachelor\u2019s degrees in physics from the University of Patras in Greece.</p>"},{"location":"instructors/#kamyar-rashidi","title":"Kamyar\u202fRashidi","text":"<p> I\u2019m an optics and photonics researcher specializing in the optimal design and experimental study of optical and photonic devices. I have hands-on experience testing optical modules, performing various optical measurements (such as spectroscopy and Fourier imaging), and automating these processes using object-oriented programming.\u00a0</p> <p> </p> <p> </p>"},{"location":"instructors/#dr-arash-nemati","title":"Dr. Arash\u202fNemati","text":"<p> Arash Nemati received his Ph.D. in Electrical and Computer Engineering from the National University of Singapore in 2020. He is currently a Postdoctoral Fellow at the Advanced Science Research Center, City University of New York. His research primarily focuses on tunable metasurfaces and optoelectronic devices. He previously served as a Scientist at the Agency for Science, Technology and Research (A*STAR), Singapore. Dr. Nemati has received several recognitions, including the Best Student Paper Award at APNFO12, the Best Poster Award at ICMAT 2019, and the 2018\u20132019 Best Paper Award from Opto-Electronic Advances.</p>"},{"location":"prerequisites/","title":"Prerequisites \u2014 only for Day 2-4 Hands-On Participants","text":"<p>Day 1 symposium attendees do not need to meet these technical requirements.</p> <ul> <li> <p>Laptop with admin rights and a working install of Python 3.12 (or any current 3.x release). A detailed setup guide will be posted here in advance.</p> </li> <li> <p>Participants are encouraged to attend a test-run meeting on Monday (time TBA) to ensure the smooth operation of the code during the hands-on sessions. Several back-up computers will be available throughout the workshop in case of troubles with personal laptops.</p> </li> <li> <p>Participants are expected to have a basic knowledge of Python: </p> </li> </ul> Topic You should be able to\u2026 Running Python \u2022 launch the interpreter or Jupyter Notebook\u2022 install a package with <code>pip</code> or <code>conda</code> Variables &amp; data types \u2022 create and print <code>int</code>, <code>float</code>, <code>str</code>, <code>bool</code> values\u2022 understand simple arithmetic and string formatting Collections \u2022 build and index a <code>list</code>, <code>tuple</code>, and <code>dict</code>\u2022 iterate over a list with <code>for item in list:</code> Control flow \u2022 write <code>if / elif / else</code> branches\u2022 use <code>for</code> and <code>while</code> loops, including <code>break</code> / <code>continue</code> Functions \u2022 define a function with <code>def my_func(arg):</code>\u2022 return a value and call the function from another cell Modules \u2022 import a standard library module (<code>import math</code>, <code>import time</code>) Basic I/O \u2022 read / write a text file with <code>open()</code> Very light OOP awareness \u2022 know that a class bundles data and methods\u2014even if you\u2019ve never written one (we\u2019ll start there on Day 2) <p>We recommend these online courses if you would like to refresh your knowledge:</p> <p>https://programming-22.mooc.fi/</p> <p>https://cs50.harvard.edu/python/2022/</p>"},{"location":"program_day1/","title":"Day 1 Symposium","text":"<p>Date: July 7, 2025 Location: CUNY ASRC Auditorium</p> Time &amp; Type Speaker &amp; Affiliation Title 09:00\u201309:10 Viktoriia Rutckaia Introductory Comments 09:10\u201309:40Keynote Gabriele GrossoASRC CUNY Photoluminescence spectroscopy automation for quantum optoelectronics 09:40\u201310:00Invited Talk Matthew C. StrasbourgColumbia University Practical Python in the lab: high-throughput optical spectroscopy of quantum materials 10:00\u201310:20Invited Talk Deepankur ThurejaHarvard University Disentangling weakly coupled modes via global fitting of optical spectra Coffee Break \u2014 10:20\u201310:40 10:40\u201311:10Keynote Haogang CaiNYU Inverse design of meta-optics using Python 11:10\u201311:40Keynote Euclides AlmeidaQueens College CUNY Engineering nonlinear metasurfaces for light generation and control 11:40\u201312:00Invited Talk Sarah Jane BakerASRC CUNY Automating data collection using Python Lunch Break \u2014 12:00\u201313:30 13:30\u201314:00Keynote Eileen OtteUniversity of Rochester Beyond the Beam: The Potential of Light\u2019s Structure 14:00\u201314:20Invited Talk Michael de OliveiraASRC CUNY Shaping Light on Demand (with a Few Lines of Code) 14:20\u201314:50Keynote Samantha RobertsASRC CUNY Generative AI for research 14:50\u201315:10Invited Talk Pratap Chandra AdakCCNY CUNY Magnon-mediated exciton-exciton interactions in a van der Waals antiferromagnet Coffee Break \u2014 15:10\u201315:30 15:30\u201315:45Contributed Talk \u2013 \u2013 15:45\u201316:00Contributed Talk \u2013 \u2013 16:00\u201316:15Contributed Talk \u2013 \u2013 16:15\u201316:30Contributed Talk \u2013 \u2013 16:30\u201316:35 Viktoriia Rutckaia Closing Remarks"},{"location":"program_days2-4/","title":"Days 2-4 Hands-on Sessions","text":""},{"location":"program_days2-4/#tuesday-8-july-2025","title":"Tuesday, 8 July 2025","text":"<p>9:00am \u2013 9:30am Welcome words and Introduction Viktoriia Rutckaia and Diana Strickland</p> <p>9:30am \u2013 12:30pm Morning session 1:  Controlling optical elements with Python INSTRUCTOR: DR. MARIO MARQUES</p> <p>The morning begins with a concise introduction to object-oriented Python\u2014showing how to package commands and data into clean, reusable \u201cobjects.\u201d Participants practice by turning a short procedural script into a self-contained class, creating a generic template for hardware control and adapting it to different devices, then wrapping settings and results into an experiment object that can scan a variable, plot the outcome, and save everything to a file. By lunchtime everyone will have run a simple automated measurement and stored the data.</p> <p>12:30pm \u2013 2:00pm Lunch, tours, project distribution</p> <p>2:00pm \u2013 3:00pm Afternoon session 1: Setting up your GitHub repository; Reviewing libraries and classes  INSTRUCTOR: AYISHA YANKEY</p> <p>3:00pm \u2013 5:00pm Independent study and working on the projects.</p>"},{"location":"program_days2-4/#wednesday-9-july-2025","title":"Wednesday, 9 July 2025","text":"<p>9:00am \u2013 12:30am Morning Session 2: Graphical user interface and coding architecture INSTRUCTOR: DR. ROMAIN TIROLE</p> <p>Building on the morning\u2019s classes, the afternoon shifts to user interfaces. After a quick tour of PyQt Designer, attendees create a widget for their motorized stage, then wire it to the underlying Stage class using Model-View-Controller principles. Next, they add real-time plotting by connecting signals and slots to a power-meter class, yielding a live-acquisition dashboard.</p> <p>12:30pm \u2013 1:30pm Lunch</p> <p>1:30pm \u2013 3:00pm Afternoon session 2: Introduction in LabVIEW, Z-scan demo INSTRUCTOR: DR. EVROS MICHAIL</p> <p>In this hands-on demonstration, a simple LabVIEW example is showcased that implements real-time code to control a translating moving stage along a focused laser beam. A thin film sample is placed on the stage, which moves precisely while simultaneously measuring the optical transmission through a photodiode positioned after the sample. The code will be written from scratch live, with opportunities for participants to modify parameters themselves, fostering an interactive learning experience. This setup provides a quick demonstration inspired by the principles of a Z-scan optical measurement system, where transmission is measured at different incident energy fluences.</p> <p>3:00pm \u2013 5:00pm Independent study and working on the projects.</p>"},{"location":"program_days2-4/#thursday-10-july-2025","title":"Thursday, 10 July 2025","text":"<p>9:00am \u2013 12:30pm Morning session 3:  Python Control for ultrafast lasers, Data Visualization with Python INSTRUCTOR: KAMYAR RASHIDI</p> <p>In this session I will discuss how to control hardware for ultrafast spectroscopy using Python. We will learn how to interface and control various components in an optical setup, such as the laser, delay stage, optical rotation components, as well as the sampling and detection systems. Additionally, we will review methods for data collection and analysis, providing a comprehensive understanding of how to manage both the hardware and the data throughout the spectroscopy process.</p> <p>12:30pm \u2013 2:00pm Lunch, project presentations, group picture.</p> <p>2:00pm \u2013 4:30pm Afternoon session 3: Python control &amp; data acquisition with the Rigol DP832 INSTRUCTOR: DR. ARASH NEMATI</p> <p>In this hands-on session we will explore how to automate laboratory hardware using Python and the PyVISA library, featuring the Rigol DP832 programmable power supply as our primary example. We will walk through each step of connecting to and querying the device, configuring voltage/current setpoints, and performing controlled sweeps to characterize system behavior (e.g., voltage or current sweeps). By running live demonstrations of Python scripts, participants will observe how to capture real-time data\u2014such as measured voltages and currents\u2014and generate plots for analysis and reporting. We will also discuss important safety and equipment-protection measures, including setting appropriate voltage/current limits, managing output channels, and verifying signal integrity. By the end of this workshop, attendees will have practical experience in Python-based instrumentation control, data visualization (Matplotlib), and essential troubleshooting strategies for research settings.</p> <p>4:30pm \u2013 5:00pm Concluding remarks</p>"},{"location":"registration/","title":"How to Join:","text":""},{"location":"registration/#day-1-symposium-open-to-all","title":"Day\u202f1 Symposium (open to all)","text":"<p>Free registration here. Specify whether you would like to participate only in Day 1 Symposium or also in the Days 2-4 Hands-On Sessions. </p> <p>Optional abstract (limit to 1 page including figures) for a peer\u2011reviewed 15\u2011min talk or poster; acceptance decisions emailed in June. Send your abstracts to viktoriia.rutckaia47@gc.cuny.edu.</p>"},{"location":"registration/#days-2-4-handson-sessions-limited-seats","title":"Days 2-4 Hands\u2011On Sessions (limited seats)","text":"<p>Prepare a motivation statement (up to one page) with your registration. Send it to viktoriia.rutckaia47@gc.cuny.edu.</p> <p>Seats awarded by the committee; submitting a Day\u202f1 abstract boosts your chances.</p> <p>Apply by 15\u202f June \u202f2025; acceptance results within two weeks.</p>"},{"location":"support/","title":"Support the Workshop and Future STEM Outreach","text":"<p> Your contribution\u2014whether a corporate sponsorship, foundation grant, or personal donation\u2014helps us run a high-impact event and seed future programs that prepare students and early-career researchers for success in photonics and wider STEM fields.</p> <p>Partnering with the 2025 IEEE Workshop on Photonics Automation with Python puts your brand in front of the next generation of optics innovators. Depending on the support level, sponsors may receive:</p> <ul> <li> <p>Brand visibility \u2013 logo on the workshop website, program booklet, and podium slides throughout the workshop.</p> </li> <li> <p>Spotlight talk \u2013 a 5-minute vendor/industry flash talk or live demo during the Industry Showcase.</p> </li> <li> <p>Exhibit table \u2013 space for hardware displays, brochures, and one-on-one conversations with attendees.</p> </li> <li> <p>Acknowledgement on the workshop website (the site will stay online as a repository of slides, code, and other materials for future events)</p> </li> </ul> <p>Have another idea\u2014equipment loans, swag, snacks, or student award? We\u2019re flexible and happy to tailor a package that aligns with your mission.</p> <p>Interested in partnering or donating? Email Dr. Viktoriia Rutckaia at viktoriia.rutckaia47@gc.cuny.edu to discuss how your support can make a lasting impact on this workshop and the next generation of STEM talent.</p>"},{"location":"venue/","title":"Venue","text":"<p>Advanced Science Research Center, CUNY</p> <p>85 St. Nicholas Terrace</p> <p>New York, NY 10031 USA</p> <p>For directions and building access, see the ASRC\u2019s Visitor Information page. </p> <p></p>"},{"location":"python/guideline/","title":"Installation Guideline","text":"<p>Here, we will provide you with the list of programs and modules for python you need to install for this school.</p>"},{"location":"python/guideline/#install-python-313","title":"Install python 3.13","text":"<p>Regardless of your operating system, you can download python 3.13 here. For example, for windows we would recommend you to download the recommended file for windows Windows installer (64-bit).</p> <ul> <li> <p>On windows machines you can also download it from the Microsoft store.</p> </li> <li> <p>On MacOS you can also install python through Homebrew or MacPorts:</p> </li> </ul> <p><pre><code>brew install python@3.13\n</code></pre> or  <pre><code>sudo port install python313\n</code></pre></p> <ul> <li>On linux, you can install in from the source. Alternatives methods depend on your distribution. On ubuntu try </li> </ul> <pre><code>sudo add-apt-repository ppa:deadsnakes/ppa\nsudo apt install python3.13 python3.13-venv\n</code></pre> <ul> <li> <p>on Fedora and Red Hat <pre><code>dnf install python3.13 \n</code></pre></p> </li> <li> <p>on arch linux <pre><code>sudo pacman -S python\n</code></pre></p> </li> </ul> <p>Alternatively, you can also install python using Anaconda, which is a popular and comprehensive open-source distribution of the Python and R programming languages, specifically designed for data science, machine learning, and artificial intelligence. It bundles these languages with a vast collection of data science packages, as well as tools for managing environments and packages, simplifying the process of setting up and using these technologies. </p>"},{"location":"python/guideline/#create-a-folder-pypaw2025","title":"Create a folder: PyPAW2025","text":"<p>Create a folder/directory called PyPAW2025 (from Python Photonics Automation Workshop 2025) wherever you want in your system. This will be your working folder for this workshop. Go inside the folder and open the terminal on linux or MacOs or the command prompt on Windows (start up, and look for cmd). If not already there, move into that folder using cd. Example: If you create the folder in the Desktop and your terminal or command prompt is open in your home folder, you can write:</p> <ul> <li> <p>On windows <pre><code>cd Desktop\\PyPAW2025\n</code></pre></p> </li> <li> <p>On linux and MacOS <pre><code>cd Desktop/PyPAW2025\n</code></pre></p> </li> </ul>"},{"location":"python/guideline/#create-virtual-environment-env","title":"Create virtual environment: env","text":"<p>Now, we will create a virtual environment using venv. This will make it easy to try different packages or python modules. Moreover, it will help you keep your python installation organized.</p> <ul> <li> <p>On windows: <pre><code>py -3.13 -m venv env\n</code></pre></p> </li> <li> <p>On linux and MacOS: <pre><code>python3.13 -m venv env\n</code></pre> Now you should have a folder called env inside PyPAW2025</p> </li> <li> <p>If you are using Anaconda</p> </li> </ul> <pre><code>conda create --prefix ./env  python=3.13\n</code></pre>"},{"location":"python/guideline/#activate-the-virtual-environment","title":"Activate the virtual environment","text":"<ul> <li> <p>On the windows command prompt type: <pre><code>env\\Scripts\\activate\n</code></pre></p> </li> <li> <p>On linux and MacOS: <pre><code>source env/bin/activate\n</code></pre></p> </li> <li> <p>If you are using Anaconda <pre><code>conda activate ./env\n</code></pre></p> </li> </ul> <p>If nothing failed, your current line on the terminal or command prompt should start with (env).</p>"},{"location":"python/guideline/#testing-the-virtual-environment","title":"Testing the virtual environment","text":"<p>To test the virtual environment, type python on the terminal or command prompt and press enter. The python shell should appear on the terminal. You will see something like this on ubuntu:</p> <pre><code>Python 3.13.3 (main, Apr  9 2025, 08:55:03) [GCC 13.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n</code></pre> <p>For windows, MacOs, or other linux distributions you should see something similar.</p> <p>Now you can type in the python shell</p> <pre><code>print(\"Hello World!\")\n</code></pre> <p>and press enter. It will output: <pre><code>Hello World!\n</code></pre></p> <p>Type exit() and press enter to leave the python shell. Your current line on the terminal or command prompt should start with (env). You can also type the previous program into a file. For that type in the terminal or command prompt</p> <ul> <li>On windows write <pre><code>notepad hello.py\n</code></pre></li> </ul> <p>On linux and MacOS write</p> <pre><code>nano hello.py\n</code></pre> <p>Now type </p> <p><pre><code>print(\"Hello World!\")\n</code></pre> In the text editor window, save and close it (Note: with nano you can do control+o to save and control+x to exit). To run this code, type in the terminal or command prompt window:</p> <pre><code>python hello.py\n</code></pre> <p>which will output: <pre><code>Hello World!\n</code></pre></p>"},{"location":"python/guideline/#update-pip","title":"Update pip","text":"<p>Now type </p> <p><pre><code>pip install --upgrade pip\n</code></pre> to update pip. On windows you might need to type</p> <p><pre><code>python.exe install --upgrade pip\n</code></pre> instead. Pip will tell you what to write if there is a problem.</p>"},{"location":"python/guideline/#python-packages","title":"Python Packages","text":"<p>Now, let us start installing some python packages. Open the terminal or command prompt and activate your environment if you close it for some reason. </p> <p>Firstly, we will install three of the most used python packages in academia <pre><code>pip install matplotlib numpy scipy\n</code></pre></p> <p>These are used to make plots, do scientific calculations, and statistical analysis (read more here numpy, scipy, and matplotlib).</p> <p>Next we need to help python to recognize and read for the usb ports of your computer. We need a library named libusb-1.0. While there are many ways to install this library, the easiest ways we found are the following.</p> <ul> <li>On windows, you need to go to libusb and mouseover Downloads and select the second option Latest Windows Binaries. Extract the file and choose the appropriate .dll. Example: Downloads\\libusb-1.0.29\\VS2022\\MS64\\dll\\libusb-1.0.dll. Copy this file and paste it in This PC\\Windows(C:)\\Windows\\System32</li> </ul> <p>-On several linux distributions, it is probably already installed. If not, just do </p> <pre><code>sudo apt install libusb-1.0\n</code></pre> <p>-On MacOs,</p> <pre><code>brew install libusb\n</code></pre> <p>Then install the python module pyusb <pre><code>pip install pyusb\npip install zeroconf psutil\n</code></pre> You can also install zeroconf and psutil. Without them, you might get some warnings when looking for devices. They are not necessary though.</p> <p>To test the pyusb installation open the python shell (by pressing python on the terminal or command prompt): and type:</p> <p><pre><code>import usb\n\nfor dev in usb.core.find(find_all=True):\n    print(dev)\n</code></pre> And press enter. The python shell should now be filled with a list of ports and information about them. Press exit() to leave the python shell.</p> <p>Now, we are ready to install PyVISA and  PySerial:</p> <pre><code>pip install PyVISA  PyVISA-py pyserial\n</code></pre> <p>If you want to use PyVISA you need to install National Instruments\u2019s VISA library or PyVISA-Py which is a pure Python implementation of the VISA standard. For this workshop PyVISA-Py is enough</p> <p>Finally, we want to install two modules to control a few Thorlabs devices, a linear stage and a powermeter:</p> <pre><code>pip install elliptec ThorlabsPM100\n</code></pre> <ul> <li> <p>On windows, you also want to install the thorlabs software for the PM100D powermeter. In particular you want to install the Thorlabs driver switcher program, that comes also with the software for the power meter. You can look for  the driver switcher at the start up.</p> </li> <li> <p>On ubuntu and similar linux distros you might not have permissions to read the devices. Use sudo or change the permissions (see this example)</p> </li> </ul> <p>Additionally, we want you to build a Graphical User Interface (GUI), for that we will use PyQT5: <pre><code>pip install PyQT5\n</code></pre></p> <p>When you work with PyQT, it is a good idea to install PyQT Designer: </p> <ul> <li> <p>On windows: <pre><code>pip install PyQT5Designer\n</code></pre></p> </li> <li> <p>On ubuntu and similar linux distros, Designer comes with</p> </li> </ul> <pre><code>sudo apt-get install qttools5-dev-tools\n</code></pre> <p>You can also install PyQT5 through apt:</p> <pre><code>sudo apt-get install python3-pyqt5  \nsudo apt-get install pyqt5-dev-tools\n</code></pre> <ul> <li>On MacOS you need to download and install QT. During the installation you need to create a QT account. It should be free. Follow this video for more details.</li> </ul>"},{"location":"python/guideline/#additional-programs","title":"Additional programs","text":""},{"location":"python/guideline/#ide","title":"IDE","text":"<p>You can use any code editor or Integrated Development Environment (IDE) to write your python programs. We would recommend visual studio code Check this for installation details. If you installed Anaconda, you can use spyder also.</p>"}]}